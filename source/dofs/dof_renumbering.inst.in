//---------------------------------------------------------------------------
//    $Id: dof_renumbering.inst.in 24178 2011-08-24 16:36:32Z heister $
//    Version: $Name$
//
//    Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011 by the deal.II authors
//
//    This file is subject to QPL and may not be  distributed
//    without copyright and license information. Please refer
//    to the file deal.II/doc/license.html for the  text  and
//    further information on this license.
//
//---------------------------------------------------------------------------


for (deal_II_dimension : DIMENSIONS)
  {
  namespace DoFRenumbering
  \{
  namespace boost
  \{
//TODO[WB]: also implement the following boost for hp DoFHandlers etc.
    template
    void
    Cuthill_McKee (DoFHandler<deal_II_dimension> &, bool, bool);

    template
    void
    compute_Cuthill_McKee (std::vector<unsigned int> &,
			   const DoFHandler<deal_II_dimension> &, bool, bool);

    template
    void
    king_ordering (DoFHandler<deal_II_dimension> &, bool, bool);

    template
    void
    compute_king_ordering (std::vector<unsigned int> &,
			   const DoFHandler<deal_II_dimension> &, bool, bool);

    template
    void
    minimum_degree (DoFHandler<deal_II_dimension> &, bool, bool);

    template
    void
    compute_minimum_degree (std::vector<unsigned int> &,
			    const DoFHandler<deal_II_dimension> &, bool, bool);


    template
    void
    Cuthill_McKee (hp::DoFHandler<deal_II_dimension> &, bool, bool);

    template
    void
    compute_Cuthill_McKee (std::vector<unsigned int> &,
			   const hp::DoFHandler<deal_II_dimension> &, bool, bool);

    template
    void
    king_ordering (hp::DoFHandler<deal_II_dimension> &, bool, bool);

    template
    void
    compute_king_ordering (std::vector<unsigned int> &,
			   const hp::DoFHandler<deal_II_dimension> &, bool, bool);

    template
    void
    minimum_degree (hp::DoFHandler<deal_II_dimension> &, bool, bool);

    template
    void
    compute_minimum_degree (std::vector<unsigned int> &,
			    const hp::DoFHandler<deal_II_dimension> &, bool, bool);
  \}


// non-boost functions:

  template
  void Cuthill_McKee<DoFHandler<deal_II_dimension> >
  (DoFHandler<deal_II_dimension>&,
   const bool,
   const bool,
   const std::vector<unsigned int>&);

  template
  void
  compute_Cuthill_McKee<DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&,
   const DoFHandler<deal_II_dimension>&,
   const bool,
   const bool,
   const std::vector<unsigned int>&);


  template
  void Cuthill_McKee<hp::DoFHandler<deal_II_dimension> >
  (hp::DoFHandler<deal_II_dimension>&,
   const bool,
   const bool,
   const std::vector<unsigned int>&);

  template
  void
  compute_Cuthill_McKee<hp::DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&,
   const hp::DoFHandler<deal_II_dimension>&,
   const bool,
   const bool,
   const std::vector<unsigned int>&);

  template
  void Cuthill_McKee<MGDoFHandler<deal_II_dimension> >
  (MGDoFHandler<deal_II_dimension>&,
   const bool,
   const bool,
   const std::vector<unsigned int>&);

  template
  void
  compute_Cuthill_McKee<MGDoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&,
   const MGDoFHandler<deal_II_dimension>&,
   const bool,
   const bool,
   const std::vector<unsigned int>&);

  template
  void component_wise<deal_II_dimension>
  (DoFHandler<deal_II_dimension>&,
   const std::vector<unsigned int>&);

#if deal_II_dimension < 3
  template
  void Cuthill_McKee<DoFHandler<deal_II_dimension,deal_II_dimension+1> >
  (DoFHandler<deal_II_dimension,deal_II_dimension+1>&,
   const bool,
   const bool,
   const std::vector<unsigned int>&);

  template
  void
  compute_Cuthill_McKee<DoFHandler<deal_II_dimension,deal_II_dimension+1> >
  (std::vector<unsigned int>&,
   const DoFHandler<deal_II_dimension,deal_II_dimension+1>&,
   const bool,
   const bool,
   const std::vector<unsigned int>&);

  template
  void component_wise<deal_II_dimension,deal_II_dimension+1>
  (DoFHandler<deal_II_dimension,deal_II_dimension+1>&,
   const std::vector<unsigned int>&);
#endif

  template
  void component_wise<deal_II_dimension>
  (hp::DoFHandler<deal_II_dimension>&,
   const std::vector<unsigned int>&);

  template
  void component_wise<deal_II_dimension>
  (MGDoFHandler<deal_II_dimension>&,
   unsigned int,
   const std::vector<unsigned int>&);

  template
  void component_wise<deal_II_dimension>
  (MGDoFHandler<deal_II_dimension>&,
   const std::vector<unsigned int>&);

  template
  void hierarchical<deal_II_dimension>
  (DoFHandler<deal_II_dimension>&);


// DG renumbering for DoFHandler

  template
  void
  cell_wise_dg<DoFHandler<deal_II_dimension> >
  (DoFHandler<deal_II_dimension>&,
   const std::vector<DoFHandler<deal_II_dimension>::cell_iterator>&);

  template
  void
  compute_cell_wise_dg<DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&, std::vector<unsigned int>&,
   const DoFHandler<deal_II_dimension>&,
   const std::vector<DoFHandler<deal_II_dimension>::cell_iterator>&);

  template
  void
  downstream_dg<DoFHandler<deal_II_dimension> >
  (DoFHandler<deal_II_dimension>&,
   const Point<deal_II_dimension>&);

  template
  void
  compute_downstream_dg<DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&,std::vector<unsigned int>&,
   const DoFHandler<deal_II_dimension>&,
   const Point<deal_II_dimension>&);
  template
  void
  compute_downstream_dg<DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&,
   const DoFHandler<deal_II_dimension>&,
   const Point<deal_II_dimension>&);

  template void
  cell_wise<DoFHandler<deal_II_dimension> >
  (DoFHandler<deal_II_dimension>&,
   const std::vector<DoFHandler<deal_II_dimension>::cell_iterator>&);

  template void
  compute_cell_wise<DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&, std::vector<unsigned int>&,
   const DoFHandler<deal_II_dimension>&,
   const std::vector<DoFHandler<deal_II_dimension>::cell_iterator>&);

  template void
  downstream<DoFHandler<deal_II_dimension> >
  (DoFHandler<deal_II_dimension>&, const Point<deal_II_dimension>&,
   const bool);

  template void
  compute_downstream<DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&,std::vector<unsigned int>&,
   const DoFHandler<deal_II_dimension>&, const Point<deal_II_dimension>&,
   const bool);

  template
  void
  clockwise_dg<DoFHandler<deal_II_dimension> >
  (DoFHandler<deal_II_dimension>&, const Point<deal_II_dimension>&, bool);

  template
  void
  compute_clockwise_dg<DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&, const DoFHandler<deal_II_dimension>&,
   const Point<deal_II_dimension>&, const bool);

// Renumbering for hp::DoFHandler

  template void
  cell_wise_dg<hp::DoFHandler<deal_II_dimension> >
  (hp::DoFHandler<deal_II_dimension>&,
   const std::vector<hp::DoFHandler<deal_II_dimension>::cell_iterator>&);

  template void
  compute_cell_wise_dg<hp::DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&, std::vector<unsigned int>&,
   const hp::DoFHandler<deal_II_dimension>&,
   const std::vector<hp::DoFHandler<deal_II_dimension>::cell_iterator>&);

  template void
  cell_wise<hp::DoFHandler<deal_II_dimension> >
  (hp::DoFHandler<deal_II_dimension>&,
   const std::vector<hp::DoFHandler<deal_II_dimension>::cell_iterator>&);

  template void
  compute_cell_wise<hp::DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&, std::vector<unsigned int>&,
   const hp::DoFHandler<deal_II_dimension>&,
   const std::vector<hp::DoFHandler<deal_II_dimension>::cell_iterator>&);

  template void
  downstream_dg<hp::DoFHandler<deal_II_dimension> >
  (hp::DoFHandler<deal_II_dimension>&,
   const Point<deal_II_dimension>&);

  template void
  compute_downstream_dg<hp::DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&,std::vector<unsigned int>&,
   const hp::DoFHandler<deal_II_dimension>&,
   const Point<deal_II_dimension>&);
  template
  void
  compute_downstream_dg<hp::DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&,
   const hp::DoFHandler<deal_II_dimension>&,
   const Point<deal_II_dimension>&);

  template void
  downstream<hp::DoFHandler<deal_II_dimension> >
  (hp::DoFHandler<deal_II_dimension>&,
   const Point<deal_II_dimension>&,
   const bool);

  template void
  compute_downstream<hp::DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&,std::vector<unsigned int>&,
   const hp::DoFHandler<deal_II_dimension>&,
   const Point<deal_II_dimension>&,
   const bool);

  template
  void
  clockwise_dg<hp::DoFHandler<deal_II_dimension> >
  (hp::DoFHandler<deal_II_dimension>&,
   const Point<deal_II_dimension>&, bool);

  template
  void
  compute_clockwise_dg<hp::DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&,
   const hp::DoFHandler<deal_II_dimension>&,
   const Point<deal_II_dimension>&,
   const bool);

// MG

  template
  void downstream_dg<deal_II_dimension>
  (MGDoFHandler<deal_II_dimension>&, const unsigned int,
   const Point<deal_II_dimension>&);

  template
  void downstream<deal_II_dimension>
  (MGDoFHandler<deal_II_dimension>&, const unsigned int,
   const Point<deal_II_dimension>&,
   const bool);

  template
  void clockwise_dg<deal_II_dimension>
  (MGDoFHandler<deal_II_dimension>&,
   const unsigned int,
   const Point<deal_II_dimension>&, bool);

// Generic numbering schemes

  template
  void random<DoFHandler<deal_II_dimension> >
  (DoFHandler<deal_II_dimension> &);

  template
  void
  compute_random<DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&,
   const DoFHandler<deal_II_dimension> &);

  template
  void sort_selected_dofs_back<DoFHandler<deal_II_dimension> >
  (DoFHandler<deal_II_dimension> &,
   const std::vector<bool> &);

  template
  void
  compute_sort_selected_dofs_back<DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&,
   const DoFHandler<deal_II_dimension> &,
   const std::vector<bool> &);

  template
  void random<hp::DoFHandler<deal_II_dimension> >
  (hp::DoFHandler<deal_II_dimension> &);

  template
  void
  compute_random<hp::DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&,
   const hp::DoFHandler<deal_II_dimension> &);

  template
  void sort_selected_dofs_back<hp::DoFHandler<deal_II_dimension> >
  (hp::DoFHandler<deal_II_dimension> &,
   const std::vector<bool> &);

  template
  void
  compute_sort_selected_dofs_back<hp::DoFHandler<deal_II_dimension> >
  (std::vector<unsigned int>&,
   const hp::DoFHandler<deal_II_dimension> &,
   const std::vector<bool> &);

  template
  void subdomain_wise<DoFHandler<deal_II_dimension> >
  (DoFHandler<deal_II_dimension> &);

#if deal_II_dimension < 3
  template
  void subdomain_wise<DoFHandler<deal_II_dimension,deal_II_dimension+1> >
  (DoFHandler<deal_II_dimension,deal_II_dimension+1> &);
#endif

  template
  void subdomain_wise<hp::DoFHandler<deal_II_dimension> >
  (hp::DoFHandler<deal_II_dimension> &);

  template
  void Cuthill_McKee<deal_II_dimension>
  (MGDoFHandler<deal_II_dimension>&,
   const unsigned int,
   const bool,
   const std::vector<unsigned int>&);

  template
  void cell_wise_dg<deal_II_dimension>
  (MGDoFHandler<deal_II_dimension>&,
   const unsigned int,
   const std::vector<MGDoFHandler<deal_II_dimension>::cell_iterator>&);
  template
  void compute_cell_wise_dg<deal_II_dimension>
  (std::vector<unsigned int>&, std::vector<unsigned int>&,
   const MGDoFHandler<deal_II_dimension>&, const unsigned int,
   const std::vector<MGDoFHandler<deal_II_dimension>::cell_iterator>&);
  template
  void compute_downstream_dg<deal_II_dimension>
  (std::vector<unsigned int>&, std::vector<unsigned int>&,
   const MGDoFHandler<deal_II_dimension>&, const unsigned int,
   const Point<deal_II_dimension>&);

   \}  // namespace DoFRenumbering
  }

