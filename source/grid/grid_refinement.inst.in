//---------------------------------------------------------------------------
//    $Id: grid_refinement.inst.in 22652 2010-11-09 17:22:36Z bangerth $
//    Version: $Name$
//
//    Copyright (C) 2010 by the deal.II authors
//
//    This file is subject to QPL and may not be  distributed
//    without copyright and license information. Please refer
//    to the file deal.II/doc/license.html for the  text  and
//    further information on this license.
//
//---------------------------------------------------------------------------



for (S : REAL_SCALARS; deal_II_dimension : DIMENSIONS)
{
  template
  void
  GridRefinement::
  refine<deal_II_dimension,dealii::Vector<S>,deal_II_dimension>
         (Triangulation<deal_II_dimension> &,
          const dealii::Vector<S> &,
          const double);

  template
  void
  GridRefinement::
  coarsen<deal_II_dimension,dealii::Vector<S>,deal_II_dimension>
         (Triangulation<deal_II_dimension> &,
          const dealii::Vector<S> &,
          const double);

  template
  void
  GridRefinement::
  refine_and_coarsen_fixed_number<deal_II_dimension,dealii::Vector<S>,deal_II_dimension>
         (Triangulation<deal_II_dimension> &,
          const dealii::Vector<S> &,
          const double,
          const double,
          const unsigned int);

  template
  void
  GridRefinement::
  refine_and_coarsen_fixed_fraction<deal_II_dimension,dealii::Vector<S>,deal_II_dimension>
         (Triangulation<deal_II_dimension> &,
          const dealii::Vector<S> &,
          const double,
          const double,
          const unsigned int);

  template
  void
  GridRefinement::
  refine_and_coarsen_optimize<deal_II_dimension,dealii::Vector<S>,deal_II_dimension>
  (Triangulation<deal_II_dimension> &,
   const dealii::Vector<S> &);

#if deal_II_dimension < 3
  template
  void
  GridRefinement::
  refine<deal_II_dimension,dealii::Vector<S>,deal_II_dimension+1>
         (Triangulation<deal_II_dimension,deal_II_dimension+1> &,
          const dealii::Vector<S> &,
          const double);

  template
  void
  GridRefinement::
  coarsen<deal_II_dimension,dealii::Vector<S>,deal_II_dimension+1>
         (Triangulation<deal_II_dimension,deal_II_dimension+1> &,
          const dealii::Vector<S> &,
          const double);

  template
  void
  GridRefinement::
  refine_and_coarsen_fixed_number<deal_II_dimension,dealii::Vector<S>,deal_II_dimension+1>
         (Triangulation<deal_II_dimension,deal_II_dimension+1> &,
          const dealii::Vector<S> &,
          const double,
          const double,
          const unsigned int);

  template
  void
  GridRefinement::
  refine_and_coarsen_fixed_fraction<deal_II_dimension,dealii::Vector<S>,deal_II_dimension+1>
         (Triangulation<deal_II_dimension,deal_II_dimension+1> &,
          const dealii::Vector<S> &,
          const double,
          const double,
          const unsigned int);

  template
  void
  GridRefinement::
  refine_and_coarsen_optimize<deal_II_dimension,dealii::Vector<S>,deal_II_dimension+1>
  (Triangulation<deal_II_dimension,deal_II_dimension+1> &,
   const dealii::Vector<S> &);
#endif
}
