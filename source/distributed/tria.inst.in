//---------------------------------------------------------------------------
//    $Id: tria.inst.in 22885 2010-11-29 21:56:40Z bangerth $
//    Version: $Name$
//
//    Copyright (C) 2010 by the deal.II authors
//
//    This file is subject to QPL and may not be  distributed
//    without copyright and license information. Please refer
//    to the file deal.II/doc/license.html for the  text  and
//    further information on this license.
//
//---------------------------------------------------------------------------


for (deal_II_dimension : DIMENSIONS)
  {

#   ifdef DEAL_II_USE_P4EST

    namespace internal
    \{
      namespace p4est
      \{
#if     deal_II_dimension > 1
      	template
      	void
      	init_quadrant_children<deal_II_dimension>
      	(const types<deal_II_dimension>::quadrant & p4est_cell,
       	 types<deal_II_dimension>::quadrant (&p4est_children)[GeometryInfo<deal_II_dimension>::max_children_per_cell]);

      	template
      	void
      	init_coarse_quadrant<deal_II_dimension>
      	(types<deal_II_dimension>::quadrant & quad);

      	template
      	bool
      	quadrant_is_equal<deal_II_dimension>
      	(const types<deal_II_dimension>::quadrant & q1,
         const types<deal_II_dimension>::quadrant & q2);

      	template
      	bool
      	quadrant_is_ancestor<deal_II_dimension>
      	(const types<deal_II_dimension>::quadrant & q1,
       	 const types<deal_II_dimension>::quadrant & q2);
#      endif
      \}
    \}
#   endif // DEAL_II_USE_P4EST

    namespace parallel
    \{
      namespace distributed
      \{
        template class Triangulation<deal_II_dimension>;
#     	if deal_II_dimension < 3
      	template class Triangulation<deal_II_dimension, deal_II_dimension+1>;
#     	endif
      \}
    \}

  }

